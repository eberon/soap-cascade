/*jslint node:true */

'use strict';

var schemas = { nsName: 'schema',
	namespace: null,
	name: 'schema',
	children: [],
	xmlns: { '': 'http://www.w3.org/2001/XMLSchema' },
	'$elementFormDefault': 'qualified',
	'$targetNamespace': 'http://www.hannonhill.com/ws/ns/AssetOperationService',
	complexTypes:
	 { authentication:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'password',
									'$nillable': 'false',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'username',
									'$nillable': 'false',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'authentication' },
		 identifier:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'id',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'path',
									'$type': 'impl:path' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'type',
									'$type': 'impl:entityTypeString' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'recycled',
									'$type': 'xsd:boolean' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'identifier' },
		 path:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$name': 'path',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'siteId',
									'$nillable': 'true',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'siteName',
									'$nillable': 'true',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'path' },
		 'user-group-identifier':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'name',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'type',
									'$type': 'impl:entityTypeString' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'user-group-identifier' },
		 message:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'to',
														'$nillable': 'false',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'from',
														'$nillable': 'false',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'subject',
														'$nillable': 'false',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'date',
														'$nillable': 'false',
														'$type': 'xsd:dateTime' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'body',
														'$nillable': 'false',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:base-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'message' },
		 searchInformation:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'matchType',
									'$type': 'impl:search-match-type' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'assetName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'assetContent',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'assetMetadata',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchBlocks',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchFiles',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchFolders',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchPages',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchFormats',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchSymlinks',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchTemplates',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchAssetFactories',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchPageConfigurationSets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchContentTypes',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchDataDefinitions',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchWorkflowDefinitions',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchMetadataSets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchPublishSets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchConnectors',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchDestinations',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchTargets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchTransports',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchUsers',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchGroups',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchRoles',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchSites',
									'$type': 'xsd:boolean' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'searchInformation' },
		 copyParameters:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'destinationContainerIdentifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'doWorkflow',
									'$nillable': 'false',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'newName',
									'$nillable': 'false',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'copyParameters' },
		 moveParameters:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'destinationContainerIdentifier',
									'$type': 'impl:identifier' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'doWorkflow',
									'$nillable': 'false',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'newName',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'moveParameters' },
		 auditParameters:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'identifier',
									'$type': 'impl:identifier' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'username',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'groupname',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'rolename',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'startDate',
									'$type': 'xsd:dateTime' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'endDate',
									'$type': 'xsd:dateTime' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'auditType',
									'$type': 'impl:auditTypes' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'auditParameters' },
		 readAuditsResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'audits',
														'$type': 'impl:audits' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readAuditsResult' },
		 audits:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'audit',
									'$type': 'impl:audit' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'audits' },
		 audit:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'user',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'action',
									'$type': 'impl:auditTypes' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'identifier',
									'$type': 'impl:identifier' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'date',
									'$type': 'xsd:dateTime' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'audit' },
		 workflowTransitionInformation:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'workflowId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'actionIdentifier',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'transitionComment',
									'$nillable': 'true',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflowTransitionInformation' },
		 batchResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'choice',
						 namespace: null,
						 name: 'choice',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'operationResult',
									'$type': 'impl:operationResult' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'checkOutResult',
									'$type': 'impl:checkOutResult' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'createResult',
									'$type': 'impl:createResult' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'listMessagesResult',
									'$type': 'impl:listMessagesResult' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'readResult',
									'$type': 'impl:readResult' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'readAccessRightsResult',
									'$type': 'impl:readAccessRightsResult' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'readWorkflowSettingsResult',
									'$type': 'impl:readWorkflowSettingsResult' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'readAuditsResult',
									'$type': 'impl:readAuditsResult' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'listSubscribersResult',
									'$type': 'impl:listSubscribersResult' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'searchResult',
									'$type': 'impl:searchResult' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'readWorkflowInformationResult',
									'$type': 'impl:readWorkflowInformationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'batchResult' },
		 operationResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$name': 'success',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$name': 'message',
									'$nillable': 'true',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'operationResult' },
		 createResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'createdAssetId',
														'$nillable': 'false',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'createResult' },
		 readResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'asset',
														'$type': 'impl:asset' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readResult' },
		 searchResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'matches',
														'$type': 'impl:search-matches' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'searchResult' },
		 'search-matches':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'match',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'search-matches' },
		 listSitesResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'sites',
														'$type': 'impl:assetIdentifiers' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'listSitesResult' },
		 readAccessRightsResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'accessRightsInformation',
														'$nillable': 'false',
														'$type': 'impl:accessRightsInformation' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readAccessRightsResult' },
		 accessRightsInformation:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'aclEntries',
									'$nillable': 'false',
									'$type': 'impl:acl-entries' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'allLevel',
									'$nillable': 'false',
									'$type': 'impl:all-level' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'accessRightsInformation' },
		 'acl-entries':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'aclEntry',
									'$nillable': 'false',
									'$type': 'impl:aclEntry' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'acl-entries' },
		 aclEntry:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'level',
									'$nillable': 'false',
									'$type': 'impl:acl-entry-level' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'type',
									'$nillable': 'false',
									'$type': 'impl:acl-entry-type' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'name',
									'$nillable': 'false',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'aclEntry' },
		 readWorkflowSettingsResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'workflowSettings',
														'$nillable': 'false',
														'$type': 'impl:workflowSettings' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readWorkflowSettingsResult' },
		 workflowSettings:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'workflowDefinitions',
									'$nillable': 'false',
									'$type': 'impl:assetIdentifiers' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'inheritWorkflows',
									'$nillable': 'false',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'requireWorkflow',
									'$nillable': 'false',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'inheritedWorkflowDefinitions',
									'$nillable': 'false',
									'$type': 'impl:assetIdentifiers' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflowSettings' },
		 listSubscribersResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'subscribers',
														'$type': 'impl:assetIdentifiers' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'listSubscribersResult' },
		 assetIdentifiers:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'assetIdentifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'assetIdentifiers' },
		 listMessagesResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'messages',
														'$nillable': 'true',
														'$type': 'impl:messagesList' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'listMessagesResult' },
		 messagesList:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'message',
									'$nillable': 'false',
									'$type': 'impl:message' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'messagesList' },
		 checkOutResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'workingCopyIdentifier',
														'$nillable': 'true',
														'$type': 'impl:identifier' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'checkOutResult' },
		 readWorkflowInformationResult:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'workflow',
														'$type': 'impl:workflow' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:operationResult' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readWorkflowInformationResult' },
		 workflow:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'relatedEntity',
														'$type': 'impl:identifier' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'currentStep',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'orderedSteps',
														'$type': 'impl:workflowSteps' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'unorderedSteps',
														'$type': 'impl:workflowSteps' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'startDate',
														'$nillable': 'true',
														'$type': 'xsd:dateTime' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'endDate',
														'$nillable': 'true',
														'$type': 'xsd:dateTime' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:named-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflow' },
		 workflowSteps:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'step',
									'$type': 'impl:workflowStep' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflowSteps' },
		 workflowStep:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'label',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'stepType',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'owner',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'actions',
									'$type': 'impl:workflowActions' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflowStep' },
		 workflowActions:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '1',
									'$name': 'action',
									'$type': 'impl:workflowAction' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflowActions' },
		 workflowAction:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'label',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'actionType',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'nextId',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflowAction' },
		 'base-asset':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'id',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'base-asset' },
		 'named-asset':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'name',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:base-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'named-asset' },
		 'folder-contained-asset':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'parentFolderId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'parentFolderPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'path',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'lastModifiedDate',
														'$nillable': 'true',
														'$type': 'xsd:dateTime' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'lastModifiedBy',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'createdDate',
														'$nillable': 'true',
														'$type': 'xsd:dateTime' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'createdBy',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteName',
														'$nillable': 'true',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:named-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'folder-contained-asset' },
		 reference:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'referencedAssetId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'referencedAssetPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'referencedAssetType',
														'$type': 'impl:entityTypeString' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:folder-contained-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'reference' },
		 xsltFormat:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'xml',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:folder-contained-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'xsltFormat' },
		 scriptFormat:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'script',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:folder-contained-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'scriptFormat' },
		 template:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'targetId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'targetPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'formatId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'formatPath',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'formatRecycled',
														'$nillable': 'true',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$name': 'xml',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'pageRegions',
														'$type': 'impl:page-regions' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:folder-contained-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'template' },
		 'containered-asset':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'parentContainerId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'parentContainerPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'path',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteName',
														'$nillable': 'true',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:named-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'containered-asset' },
		 role:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'roleType',
														'$type': 'impl:role-types' },
													{ nsName: 'choice',
														namespace: null,
														name: 'choice',
														children:
														 [ { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '1',
																 '$name': 'globalAbilities',
																 '$type': 'impl:global-abilities' },
															 { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '1',
																 '$name': 'siteAbilities',
																 '$type': 'impl:site-abilities' } ],
														xmlns: {} } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:named-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'role' },
		 'global-abilities':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bypassAllPermissionsChecks',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessSiteManagement',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'createSites',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'uploadImagesFromWysiwyg',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'multiSelectCopy',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'multiSelectPublish',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'multiSelectMove',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'multiSelectDelete',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editPageLevelConfigurations',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editPageContentType',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editDataDefinition',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'publishReadableHomeAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'publishWritableHomeAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'viewPublishQueue',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'reorderPublishQueue',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'cancelPublishJobs',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editAccessRights',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'viewVersions',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'activateDeleteVersions',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessAudits',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bypassWorkflow',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'assignApproveWorkflowSteps',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'deleteWorkflows',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'breakLocks',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'assignWorkflowsToFolders',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bypassAssetFactoryGroupsNewMenu',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bypassDestinationGroupsWhenPublishing',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bypassWorkflowDefintionGroupsForFolders',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'alwaysAllowedToToggleDataChecks',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessAdminArea',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessAssetFactories',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessConfigurationSets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessDataDefinitions',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessMetadataSets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessPublishSets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessTargetsDestinations',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessTransports',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessWorkflowDefinitions',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessContentTypes',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessAllSites',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'viewSystemInfoAndLogs',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'forceLogout',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'diagnosticTests',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessSecurityArea',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'publishReadableAdminAreaAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'publishWritableAdminAreaAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'newSiteWizard',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'integrateFolder',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'importZipArchive',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'optimizeDatabase',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'syncLdap',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bulkChange',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'configureLogging',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'searchingIndexing',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessConfiguration',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editSystemPreferences',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'siteMigration',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'broadcastMessages',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'recycleBinViewRestoreUserAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'recycleBinDeleteAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'recycleBinViewRestoreAllAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'viewUsersInMemberGroups',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'viewAllUsers',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'createUsers',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'deleteUsersInMemberGroups',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'deleteAllUsers',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'viewMemberGroups',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'viewAllGroups',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'createGroups',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'deleteMemberGroups',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessRoles',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'createRoles',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'deleteAnyGroup',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editAnyUser',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editUsersInMemberGroups',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editAnyGroup',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editMemberGroups',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'moveRenameAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'recycleBinChecker',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'pathRepairTool',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'databaseExportTool',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'sendStaleAssetNotifications',
									'$type': 'xsd:boolean' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'global-abilities' },
		 'site-abilities':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bypassAllPermissionsChecks',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'uploadImagesFromWysiwyg',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'multiSelectCopy',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'multiSelectPublish',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'multiSelectMove',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'multiSelectDelete',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editPageLevelConfigurations',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editPageContentType',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editDataDefinition',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'publishReadableHomeAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'publishWritableHomeAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'editAccessRights',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'viewVersions',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'activateDeleteVersions',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessAudits',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bypassWorkflow',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'assignApproveWorkflowSteps',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'deleteWorkflows',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'breakLocks',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'assignWorkflowsToFolders',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bypassAssetFactoryGroupsNewMenu',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bypassDestinationGroupsWhenPublishing',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bypassWorkflowDefintionGroupsForFolders',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessAdminArea',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessAssetFactories',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessConfigurationSets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessDataDefinitions',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessMetadataSets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessPublishSets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessDestinations',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessTransports',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessWorkflowDefinitions',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessContentTypes',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'accessConnectors',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'publishReadableAdminAreaAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'publishWritableAdminAreaAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'integrateFolder',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'importZipArchive',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'bulkChange',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'recycleBinViewRestoreUserAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'recycleBinDeleteAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'recycleBinViewRestoreAllAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'moveRenameAssets',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'diagnosticTests',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'alwaysAllowedToToggleDataChecks',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'viewPublishQueue',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'reorderPublishQueue',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'cancelPublishJobs',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'sendStaleAssetNotifications',
									'$type': 'xsd:boolean' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'site-abilities' },
		 user:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'username',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'fullName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'email',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'authType',
									'$type': 'impl:user-auth-types' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'password',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'enabled',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'groups',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'defaultGroup',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'role',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'defaultSiteId',
									'$nillable': 'true',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'defaultSiteName',
									'$nillable': 'true',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'user' },
		 group:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'groupName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'groupStartingPageId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'groupStartingPagePath',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'groupStartingPageRecycled',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'groupBaseFolderId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'groupBaseFolderPath',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'groupBaseFolderRecycled',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'groupAssetFactoryContainerId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'groupAssetFactoryContainerPath',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'cssClasses',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'wysiwygAllowFontAssignment',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'wysiwygAllowFontFormatting',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'wysiwygAllowTextFormatting',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'wysiwygAllowViewSource',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'wysiwygAllowImageInsertion',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'wysiwygAllowTableInsertion',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'users',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'role',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'group' },
		 site:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'url',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'defaultMetadataSetId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'defaultMetadataSetPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'cssFileId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'cssFilePath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'cssFileRecycled',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteAssetFactoryContainerId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteAssetFactoryContainerPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteStartingPageId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteStartingPagePath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteStartingPageRecycled',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'cssClasses',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'roleAssignments',
														'$type': 'impl:role-assignments' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'usesScheduledPublishing',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'timeToPublish',
														'$type': 'xsd:time' },
													{ nsName: 'choice',
														namespace: null,
														name: 'choice',
														children:
														 [ { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'publishIntervalHours',
																 '$type': 'xsd:nonNegativeInteger' },
															 { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'publishDaysOfWeek',
																 '$type': 'impl:daysOfWeek' },
															 { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'cronExpression',
																 '$type': 'xsd:string' } ],
														xmlns: {} },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportToUsers',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportToGroups',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportOnErrorOnly',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'recycleBinExpiration',
														'$type': 'impl:recycleBinExpiration' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootFolderId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootAssetFactoryContainerId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootPageConfigurationSetContainerId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootContentTypeContainerId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootConnectorContainerId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootDataDefinitionContainerId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootMetadataSetContainerId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootPublishSetContainerId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootSiteDestinationContainerId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootTransportContainerId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rootWorkflowDefinitionContainerId',
														'$nillable': 'true',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:named-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'site' },
		 'role-assignments':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'roleAssignment',
									'$type': 'impl:role-assignment' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'role-assignments' },
		 'role-assignment':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'roleId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'roleName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'users',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'groups',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'role-assignment' },
		 assetFactory:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'applicableGroups',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'assetType',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'baseAssetId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'baseAssetPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'baseAssetRecycled',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'placementFolderId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'placementFolderPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'placementFolderRecycled',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'allowSubfolderPlacement',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'folderPlacementPosition',
														'$type': 'xsd:nonNegativeInteger' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'overwrite',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'workflowMode',
														'$type': 'impl:asset-factory-workflow-mode' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'workflowDefinitionId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'workflowDefinitionPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'plugins',
														'$type': 'impl:asset-factory-plugins' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'assetFactory' },
		 'asset-factory-plugins':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'plugin',
									'$type': 'impl:asset-factory-plugin' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'asset-factory-plugins' },
		 'asset-factory-plugin':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'name',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'parameters',
									'$type': 'impl:asset-factory-plugin-parameters' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'asset-factory-plugin' },
		 'asset-factory-plugin-parameters':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'parameter',
									'$type': 'impl:asset-factory-plugin-parameter' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'asset-factory-plugin-parameters' },
		 'asset-factory-plugin-parameter':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'name',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'value',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'asset-factory-plugin-parameter' },
		 assetFactoryContainer:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'applicableGroups',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'assetFactoryContainer' },
		 contentType:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'pageConfigurationSetId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'pageConfigurationSetPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'metadataSetId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'metadataSetPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'dataDefinitionId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'dataDefinitionPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'contentTypePageConfigurations',
														'$nillable': 'true',
														'$type': 'impl:contentTypePageConfigurations' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'inlineEditableFields',
														'$nillable': 'true',
														'$type': 'impl:inlineEditableFields' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'contentType' },
		 contentTypePageConfigurations:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'contentTypePageConfiguration',
									'$nillable': 'true',
									'$type': 'impl:contentTypePageConfiguration' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'contentTypePageConfigurations' },
		 contentTypePageConfiguration:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'pageConfigurationId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'pageConfigurationName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'publishMode',
									'$type': 'impl:contentTypePageConfigurationPublishMode' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'destinations',
									'$nillable': 'true',
									'$type': 'impl:contentTypePageConfigurationDestinations' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'contentTypePageConfiguration' },
		 contentTypePageConfigurationDestinations:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'destination',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'contentTypePageConfigurationDestinations' },
		 inlineEditableFields:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'inlineEditableField',
									'$nillable': 'true',
									'$type': 'impl:inlineEditableField' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'inlineEditableFields' },
		 inlineEditableField:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'pageConfigurationName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'pageRegionName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'dataDefinitionGroupPath',
									'$nillable': 'true',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'type',
									'$type': 'impl:inlineEditableFieldType' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'name',
									'$nillable': 'true',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'inlineEditableField' },
		 contentTypeContainer:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'contentTypeContainer' },
		 pageConfigurationSet:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'pageConfigurations',
														'$type': 'impl:page-configurations' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'pageConfigurationSet' },
		 'page-configurations':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '1',
									'$name': 'pageConfiguration',
									'$type': 'impl:pageConfiguration' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'page-configurations' },
		 pageConfiguration:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'name',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'defaultConfiguration',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'templateId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'templatePath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'formatId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'formatPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'formatRecycled',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'pageRegions',
														'$type': 'impl:page-regions' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'outputExtension',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'serializationType',
														'$nillable': 'true',
														'$type': 'impl:serialization-type' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'includeXMLDeclaration',
														'$nillable': 'true',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'publishable',
														'$nillable': 'true',
														'$type': 'xsd:boolean' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:base-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'pageConfiguration' },
		 'page-regions':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'pageRegion',
									'$type': 'impl:pageRegion' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'page-regions' },
		 pageRegion:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'name',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'blockId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'blockPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'blockRecycled',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'noBlock',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'formatId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'formatPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'formatRecycled',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'noFormat',
														'$type': 'xsd:boolean' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:base-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'pageRegion' },
		 pageConfigurationSetContainer:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'pageConfigurationSetContainer' },
		 dataDefinition:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'xml',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'dataDefinition' },
		 dataDefinitionContainer:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'dataDefinitionContainer' },
		 metadataSet:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'authorFieldRequired',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'authorFieldVisibility',
														'$type': 'impl:metadata-field-visibility' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'descriptionFieldRequired',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'descriptionFieldVisibility',
														'$type': 'impl:metadata-field-visibility' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'displayNameFieldRequired',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'displayNameFieldVisibility',
														'$type': 'impl:metadata-field-visibility' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'endDateFieldRequired',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'endDateFieldVisibility',
														'$type': 'impl:metadata-field-visibility' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'keywordsFieldRequired',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'keywordsFieldVisibility',
														'$type': 'impl:metadata-field-visibility' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'reviewDateFieldRequired',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'reviewDateFieldVisibility',
														'$type': 'impl:metadata-field-visibility' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'startDateFieldRequired',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'startDateFieldVisibility',
														'$type': 'impl:metadata-field-visibility' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'summaryFieldRequired',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'summaryFieldVisibility',
														'$type': 'impl:metadata-field-visibility' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'teaserFieldRequired',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'teaserFieldVisibility',
														'$type': 'impl:metadata-field-visibility' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'titleFieldRequired',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'titleFieldVisibility',
														'$type': 'impl:metadata-field-visibility' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'dynamicMetadataFieldDefinitions',
														'$type': 'impl:dynamic-metadata-field-definitions' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'metadataSet' },
		 'dynamic-metadata-field-definitions':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'dynamicMetadataFieldDefinition',
									'$type': 'impl:dynamicMetadataFieldDefinition' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'dynamic-metadata-field-definitions' },
		 dynamicMetadataFieldDefinition:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'name',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'label',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'fieldType',
									'$type': 'impl:dynamic-metadata-field-type' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'required',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'visibility',
									'$type': 'impl:metadata-field-visibility' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'possibleValues',
									'$type': 'impl:dynamic-metadata-field-definition-values' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'dynamicMetadataFieldDefinition' },
		 'dynamic-metadata-field-definition-values':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'possibleValue',
									'$nillable': 'true',
									'$type': 'impl:dynamic-metadata-field-definition-value' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'dynamic-metadata-field-definition-values' },
		 'dynamic-metadata-field-definition-value':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'value',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'selectedByDefault',
									'$type': 'xsd:boolean' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'dynamic-metadata-field-definition-value' },
		 metadataSetContainer:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'metadataSetContainer' },
		 publishSet:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'files',
														'$type': 'impl:publishable-asset-list' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'folders',
														'$type': 'impl:publishable-asset-list' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'pages',
														'$type': 'impl:publishable-asset-list' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'usesScheduledPublishing',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'timeToPublish',
														'$type': 'xsd:time' },
													{ nsName: 'choice',
														namespace: null,
														name: 'choice',
														children:
														 [ { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'publishIntervalHours',
																 '$type': 'xsd:nonNegativeInteger' },
															 { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'publishDaysOfWeek',
																 '$type': 'impl:daysOfWeek' },
															 { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'cronExpression',
																 '$type': 'xsd:string' } ],
														xmlns: {} },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportToUsers',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportToGroups',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportOnErrorOnly',
														'$type': 'xsd:boolean' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'publishSet' },
		 'publishable-asset-list':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'publishableAssetIdentifier',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'publishable-asset-list' },
		 daysOfWeek:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'dayOfWeek',
									'$type': 'impl:dayOfWeek' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'daysOfWeek' },
		 publishSetContainer:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'publishSetContainer' },
		 siteDestinationContainer:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'siteDestinationContainer' },
		 target:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'parentTargetId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'parentTargetPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'path',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'baseFolderId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'baseFolderPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'outputExtension',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'cssClasses',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'cssFileId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'cssFilePath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'cssFileRecycled',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'serializationType',
														'$type': 'impl:serialization-type' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'includeXMLDeclaration',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'includeTargetPath',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'removeBaseFolder',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'usesScheduledPublishing',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'timeToPublish',
														'$type': 'xsd:time' },
													{ nsName: 'choice',
														namespace: null,
														name: 'choice',
														children:
														 [ { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'publishIntervalHours',
																 '$type': 'xsd:nonNegativeInteger' },
															 { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'publishDaysOfWeek',
																 '$type': 'impl:daysOfWeek' },
															 { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'cronExpression',
																 '$type': 'xsd:string' } ],
														xmlns: {} },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportToUsers',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportToGroups',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportOnErrorOnly',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:named-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'target' },
		 destination:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'parentContainerId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'parentContainerPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'transportId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'transportPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'applicableGroups',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'directory',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'enabled',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'checkedByDefault',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'publishASCII',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'usesScheduledPublishing',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'timeToPublish',
														'$type': 'xsd:time' },
													{ nsName: 'choice',
														namespace: null,
														name: 'choice',
														children:
														 [ { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'publishIntervalHours',
																 '$type': 'xsd:nonNegativeInteger' },
															 { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'publishDaysOfWeek',
																 '$type': 'impl:daysOfWeek' },
															 { nsName: 'element',
																 namespace: null,
																 name: 'element',
																 children: [],
																 xmlns: {},
																 '$maxOccurs': '1',
																 '$minOccurs': '0',
																 '$name': 'cronExpression',
																 '$type': 'xsd:string' } ],
														xmlns: {} },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportToUsers',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportToGroups',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sendReportOnErrorOnly',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'webUrl',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteId',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'siteName',
														'$nillable': 'true',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:named-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'destination' },
		 fileSystemTransport:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'directory',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'fileSystemTransport' },
		 ftpTransport:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'hostName',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'port',
														'$type': 'xsd:positiveInteger' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'username',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'password',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'directory',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'doSFTP',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'doPASV',
														'$type': 'xsd:boolean' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'ftpTransport' },
		 databaseTransport:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'transportSiteId',
														'$type': 'xsd:nonNegativeInteger' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'serverName',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'serverPort',
														'$type': 'xsd:positiveInteger' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'databaseName',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'username',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'password',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'databaseTransport' },
		 transportContainer:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'transportContainer' },
		 connectorContainer:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'connectorContainer' },
		 connector:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'auth1',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'auth2',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'url',
														'$nillable': 'true',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'verified',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'verifiedDate',
														'$nillable': 'true',
														'$type': 'xsd:dateTime' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'connectorParameters',
														'$type': 'impl:connector-parameter-list' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'connectorContentTypeLinks',
														'$type': 'impl:connector-content-type-link-list' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'connector' },
		 statusUpdateConnector:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'destinationId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'destinationPath',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:connector' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'statusUpdateConnector' },
		 wordPressConnector:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children: [],
									xmlns: {},
									'$base': 'impl:connector' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'wordPressConnector' },
		 twitterConnector:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children: [],
									xmlns: {},
									'$base': 'impl:statusUpdateConnector' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'twitterConnector' },
		 facebookConnector:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children: [],
									xmlns: {},
									'$base': 'impl:statusUpdateConnector' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'facebookConnector' },
		 googleAnalyticsConnector:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children: [],
									xmlns: {},
									'$base': 'impl:connector' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'googleAnalyticsConnector' },
		 'connector-parameter-list':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'connectorParameter',
									'$nillable': 'true',
									'$type': 'impl:connector-parameter' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'connector-parameter-list' },
		 'connector-parameter':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'name',
									'$nillable': 'true',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'value',
									'$nillable': 'true',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'connector-parameter' },
		 'connector-content-type-link-list':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'connectorContentTypeLink',
									'$nillable': 'true',
									'$type': 'impl:connector-content-type-link' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'connector-content-type-link-list' },
		 'connector-content-type-link':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'contentTypeId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'contentTypePath',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'pageConfigurationId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'pageConfigurationName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'connectorContentTypeLinkParams',
									'$type': 'impl:connector-content-type-link-param-list' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'connector-content-type-link' },
		 'connector-content-type-link-param-list':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'connectorContentTypeLinkParam',
									'$nillable': 'true',
									'$type': 'impl:connector-content-type-link-param' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'connector-content-type-link-param-list' },
		 'connector-content-type-link-param':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'name',
									'$nillable': 'true',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'value',
									'$nillable': 'true',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'connector-content-type-link-param' },
		 workflowDefinition:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'applicableGroups',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'copy',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'create',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'delete',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'edit',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'namingBehavior',
														'$type': 'impl:workflowNamingBehavior' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'xml',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflowDefinition' },
		 workflowDefinitionContainer:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:containered-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflowDefinitionContainer' },
		 'dublin-aware-asset':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'metadata',
														'$type': 'impl:metadata' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'metadataSetId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'metadataSetPath',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:folder-contained-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'dublin-aware-asset' },
		 metadata:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'author',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'displayName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'endDate',
									'$nillable': 'true',
									'$type': 'xsd:dateTime' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'keywords',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'metaDescription',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'reviewDate',
									'$nillable': 'true',
									'$type': 'xsd:dateTime' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'startDate',
									'$nillable': 'true',
									'$type': 'xsd:dateTime' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'summary',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'teaser',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'title',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'dynamicFields',
									'$type': 'impl:dynamicMetadataFields' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'metadata' },
		 dynamicMetadataFields:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'dynamicField',
									'$type': 'impl:dynamicMetadataField' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'dynamicMetadataFields' },
		 dynamicMetadataField:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'name',
									'$nillable': 'false',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'fieldValues',
									'$nillable': 'true',
									'$type': 'impl:fieldValues' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'dynamicMetadataField' },
		 fieldValues:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'fieldValue',
									'$nillable': 'true',
									'$type': 'impl:fieldValue' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'fieldValues' },
		 fieldValue:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'value',
									'$nillable': 'true',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'fieldValue' },
		 'expiring-asset':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'expirationFolderId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'expirationFolderPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'expirationFolderRecycled',
														'$type': 'xsd:boolean' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:dublin-aware-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'expiring-asset' },
		 symlink:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'linkURL',
														'$type': 'xsd:anyURI' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:expiring-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'symlink' },
		 block:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children: [],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:expiring-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'block' },
		 indexBlock:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexBlockType',
														'$type': 'impl:index-block-type' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexedFolderId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexedFolderPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexedContentTypeId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexedContentTypePath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexedFolderRecycled',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'maxRenderedAssets',
														'$type': 'xsd:nonNegativeInteger' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'depthOfIndex',
														'$type': 'xsd:nonNegativeInteger' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'renderingBehavior',
														'$type': 'impl:index-block-rendering-behavior' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexPages',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexBlocks',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexLinks',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexFiles',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexRegularContent',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexSystemMetadata',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexUserMetadata',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexAccessRights',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexUserInfo',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'indexWorkflowInfo',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'appendCallingPageData',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sortMethod',
														'$type': 'impl:index-block-sort-method' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'sortOrder',
														'$type': 'impl:index-block-sort-order' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'pageXML',
														'$type': 'impl:index-block-page-xml' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:block' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'indexBlock' },
		 feedBlock:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'feedURL',
														'$type': 'xsd:anyURI' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:block' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'feedBlock' },
		 textBlock:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'text',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:block' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'textBlock' },
		 xmlBlock:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'xml',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:block' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'xmlBlock' },
		 xhtmlDataDefinitionBlock:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'structuredData',
														'$type': 'impl:structured-data' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'xhtml',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:block' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'xhtmlDataDefinitionBlock' },
		 twitterFeedBlock:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'accountName',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'searchString',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'maxResults',
														'$type': 'xsd:nonNegativeInteger' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'useDefaultStyle',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'excludeJQuery',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '1',
														'$name': 'queryType',
														'$type': 'impl:twitter-query-type' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:block' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'twitterFeedBlock' },
		 'publishable-asset':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'shouldBePublished',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'shouldBeIndexed',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'lastPublishedDate',
														'$nillable': 'true',
														'$type': 'xsd:dateTime' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'lastPublishedBy',
														'$nillable': 'true',
														'$type': 'xsd:string' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:expiring-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'publishable-asset' },
		 page:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'configurationSetId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'configurationSetPath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'contentTypeId',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'contentTypePath',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'structuredData',
														'$type': 'impl:structured-data' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'xhtml',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'pageConfigurations',
														'$nillable': 'false',
														'$type': 'impl:page-configurations' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'maintainAbsoluteLinks',
														'$type': 'xsd:boolean' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:publishable-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'page' },
		 'structured-data':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'definitionId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'definitionPath',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'structuredDataNodes',
									'$type': 'impl:structured-data-nodes' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'structured-data' },
		 'structured-data-nodes':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'structuredDataNode',
									'$type': 'impl:structured-data-node' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'structured-data-nodes' },
		 'structured-data-node':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'type',
									'$type': 'impl:structured-data-type' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'structuredDataNodes',
									'$type': 'impl:structured-data-nodes' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'text',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'assetType',
									'$type': 'impl:structured-data-asset-type' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'blockId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'blockPath',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'fileId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'filePath',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'pageId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'pagePath',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'symlinkId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'symlinkPath',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'recycled',
									'$type': 'xsd:boolean' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'structured-data-node' },
		 folder:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'children',
														'$nillable': 'true',
														'$type': 'impl:container-children' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:publishable-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'folder' },
		 'entity-type':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'name',
									'$type': 'impl:entityTypeString' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'entity-type' },
		 'container-children':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$minOccurs': '0',
									'$name': 'child',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'container-children' },
		 file:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'complexContent',
						 namespace: null,
						 name: 'complexContent',
						 children:
							[ { nsName: 'extension',
									namespace: null,
									name: 'extension',
									children:
									 [ { nsName: 'sequence',
											 namespace: null,
											 name: 'sequence',
											 children:
												[ { nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'text',
														'$type': 'xsd:string' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'data',
														'$type': 'xsd:base64Binary' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'rewriteLinks',
														'$type': 'xsd:boolean' },
													{ nsName: 'element',
														namespace: null,
														name: 'element',
														children: [],
														xmlns: {},
														'$maxOccurs': '1',
														'$minOccurs': '0',
														'$name': 'maintainAbsoluteLinks',
														'$type': 'xsd:boolean' } ],
											 xmlns: {} } ],
									xmlns: {},
									'$base': 'impl:publishable-asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'file' },
		 asset:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'workflowConfiguration',
									'$type': 'impl:workflow-configuration' },
								{ nsName: 'choice',
									namespace: null,
									name: 'choice',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'feedBlock',
											 '$nillable': 'true',
											 '$type': 'impl:feedBlock' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'indexBlock',
											 '$nillable': 'true',
											 '$type': 'impl:indexBlock' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'textBlock',
											 '$nillable': 'true',
											 '$type': 'impl:textBlock' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'xhtmlDataDefinitionBlock',
											 '$nillable': 'true',
											 '$type': 'impl:xhtmlDataDefinitionBlock' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'xmlBlock',
											 '$nillable': 'true',
											 '$type': 'impl:xmlBlock' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'file',
											 '$nillable': 'true',
											 '$type': 'impl:file' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'folder',
											 '$nillable': 'true',
											 '$type': 'impl:folder' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'page',
											 '$nillable': 'true',
											 '$type': 'impl:page' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'reference',
											 '$nillable': 'true',
											 '$type': 'impl:reference' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'xsltFormat',
											 '$nillable': 'true',
											 '$type': 'impl:xsltFormat' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'scriptFormat',
											 '$nillable': 'true',
											 '$type': 'impl:scriptFormat' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'symlink',
											 '$nillable': 'true',
											 '$type': 'impl:symlink' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'template',
											 '$nillable': 'true',
											 '$type': 'impl:template' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'user',
											 '$nillable': 'true',
											 '$type': 'impl:user' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'group',
											 '$nillable': 'true',
											 '$type': 'impl:group' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'role',
											 '$nillable': 'true',
											 '$type': 'impl:role' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'assetFactory',
											 '$nillable': 'true',
											 '$type': 'impl:assetFactory' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'assetFactoryContainer',
											 '$nillable': 'true',
											 '$type': 'impl:assetFactoryContainer' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'contentType',
											 '$nillable': 'true',
											 '$type': 'impl:contentType' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'contentTypeContainer',
											 '$nillable': 'true',
											 '$type': 'impl:contentTypeContainer' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'connectorContainer',
											 '$nillable': 'true',
											 '$type': 'impl:connectorContainer' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'twitterConnector',
											 '$nillable': 'true',
											 '$type': 'impl:twitterConnector' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'facebookConnector',
											 '$nillable': 'true',
											 '$type': 'impl:facebookConnector' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'wordPressConnector',
											 '$nillable': 'true',
											 '$type': 'impl:wordPressConnector' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'googleAnalyticsConnector',
											 '$nillable': 'true',
											 '$type': 'impl:googleAnalyticsConnector' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'pageConfigurationSet',
											 '$nillable': 'true',
											 '$type': 'impl:pageConfigurationSet' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'pageConfigurationSetContainer',
											 '$nillable': 'true',
											 '$type': 'impl:pageConfigurationSetContainer' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'dataDefinition',
											 '$nillable': 'true',
											 '$type': 'impl:dataDefinition' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'dataDefinitionContainer',
											 '$nillable': 'true',
											 '$type': 'impl:dataDefinitionContainer' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'metadataSet',
											 '$nillable': 'true',
											 '$type': 'impl:metadataSet' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'metadataSetContainer',
											 '$nillable': 'true',
											 '$type': 'impl:metadataSetContainer' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'publishSet',
											 '$nillable': 'true',
											 '$type': 'impl:publishSet' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'publishSetContainer',
											 '$nillable': 'true',
											 '$type': 'impl:publishSetContainer' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'target',
											 '$nillable': 'true',
											 '$type': 'impl:target' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'siteDestinationContainer',
											 '$nillable': 'true',
											 '$type': 'impl:siteDestinationContainer' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'destination',
											 '$nillable': 'true',
											 '$type': 'impl:destination' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'fileSystemTransport',
											 '$nillable': 'true',
											 '$type': 'impl:fileSystemTransport' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'ftpTransport',
											 '$nillable': 'true',
											 '$type': 'impl:ftpTransport' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'databaseTransport',
											 '$nillable': 'true',
											 '$type': 'impl:databaseTransport' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'transportContainer',
											 '$nillable': 'true',
											 '$type': 'impl:transportContainer' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'workflowDefinition',
											 '$nillable': 'true',
											 '$type': 'impl:workflowDefinition' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'workflowDefinitionContainer',
											 '$nillable': 'true',
											 '$type': 'impl:workflowDefinitionContainer' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'twitterFeedBlock',
											 '$nillable': 'true',
											 '$type': 'impl:twitterFeedBlock' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'site',
											 '$nillable': 'true',
											 '$type': 'impl:site' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'asset' },
		 'workflow-configuration':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'workflowName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'workflowDefinitionId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'workflowDefinitionPath',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'workflowComments',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'workflowStepConfigurations',
									'$type': 'impl:workflow-step-configurations' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'endDate',
									'$type': 'xsd:dateTime' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflow-configuration' },
		 'workflow-step-configurations':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': 'unbounded',
									'$name': 'workflowStepConfiguration',
									'$type': 'impl:workflow-step-configuration' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflow-step-configurations' },
		 'workflow-step-configuration':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'stepIdentifier',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'stepAssignment',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'workflow-step-configuration' },
		 create:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'asset',
									'$type': 'impl:asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'create' },
		 'delete':
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'workflowConfiguration',
									'$type': 'impl:workflow-configuration' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'delete' },
		 edit:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'asset',
									'$type': 'impl:asset' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'edit' },
		 move:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'moveParameters',
									'$nillable': 'false',
									'$type': 'impl:moveParameters' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'workflowConfiguration',
									'$nillable': 'false',
									'$type': 'impl:workflow-configuration' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'move' },
		 publish:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'publishInformation',
									'$type': 'impl:publishInformation' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'publish' },
		 publishInformation:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$type': 'impl:identifier' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'destinations',
									'$nillable': 'false',
									'$type': 'impl:assetIdentifiers' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'unpublish',
									'$nillable': 'true',
									'$type': 'xsd:boolean' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'publishInformation' },
		 read:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'read' },
		 readAccessRights:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readAccessRights' },
		 editAccessRights:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'accessRightsInformation',
									'$nillable': 'true',
									'$type': 'impl:accessRightsInformation' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'applyToChildren',
									'$nillable': 'false',
									'$type': 'xsd:boolean' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'editAccessRights' },
		 readWorkflowSettings:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readWorkflowSettings' },
		 editWorkflowSettings:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'workflowSettings',
									'$nillable': 'true',
									'$type': 'impl:workflowSettings' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'applyInheritWorkflowsToChildren',
									'$nillable': 'false',
									'$type': 'xsd:boolean' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'applyRequireWorkflowToChildren',
									'$nillable': 'false',
									'$type': 'xsd:boolean' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'editWorkflowSettings' },
		 listSubscribers:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'listSubscribers' },
		 checkOut:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'checkOut' },
		 checkIn:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'checkIn' },
		 copy:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'identifier',
									'$nillable': 'false',
									'$type': 'impl:identifier' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'copyParameters',
									'$nillable': 'false',
									'$type': 'impl:copyParameters' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'workflowConfiguration',
									'$nillable': 'false',
									'$type': 'impl:workflow-configuration' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'copy' },
		 siteCopy:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'sequence',
						 namespace: null,
						 name: 'sequence',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'originalSiteId',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '0',
									'$name': 'originalSiteName',
									'$type': 'xsd:string' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$maxOccurs': '1',
									'$minOccurs': '1',
									'$name': 'newSiteName',
									'$nillable': 'false',
									'$type': 'xsd:string' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'siteCopy' },
		 operation:
			{ nsName: 'complexType',
				namespace: null,
				name: 'complexType',
				children:
				 [ { nsName: 'choice',
						 namespace: null,
						 name: 'choice',
						 children:
							[ { nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'create',
									'$type': 'impl:create' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'delete',
									'$type': 'impl:delete' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'edit',
									'$type': 'impl:edit' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'move',
									'$type': 'impl:move' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'publish',
									'$type': 'impl:publish' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'read',
									'$type': 'impl:read' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'readAccessRights',
									'$type': 'impl:readAccessRights' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'editAccessRights',
									'$type': 'impl:editAccessRights' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'readWorkflowSettings',
									'$type': 'impl:readWorkflowSettings' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'editWorkflowSettings',
									'$type': 'impl:editWorkflowSettings' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'listSubscribers',
									'$type': 'impl:listSubscribers' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'checkOut',
									'$type': 'impl:checkOut' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'checkIn',
									'$type': 'impl:checkIn' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'copy',
									'$type': 'impl:copy' },
								{ nsName: 'element',
									namespace: null,
									name: 'element',
									children: [],
									xmlns: {},
									'$name': 'siteCopy',
									'$type': 'impl:siteCopy' } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'operation' } },
	types:
	 { 'message-mark-type':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'read' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'unread' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'message-mark-type' },
		 'search-match-type':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'match-all' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'match-any' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'search-match-type' },
		 auditTypes:
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'login' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'login_failed' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'logout' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'start_workflow' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'advance_workflow' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'edit' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'copy' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'create' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'reference' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'delete' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'delete_unpublish' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'check_in' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'check_out' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'activate_version' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'publish' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'unpublish' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'recycle' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'restore' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'move' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'auditTypes' },
		 entityTypeString:
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'assetfactory' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'assetfactorycontainer' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'block' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'block_FEED' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'block_INDEX' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'block_TEXT' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'block_XHTML_DATADEFINITION' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'block_XML' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'block_TWITTER_FEED' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'connectorcontainer' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'twitterconnector' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'facebookconnector' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'wordpressconnector' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'googleanalyticsconnector' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'contenttype' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'contenttypecontainer' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'destination' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'file' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'folder' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'group' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'message' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'metadataset' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'metadatasetcontainer' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'page' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'pageconfigurationset' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'pageconfiguration' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'pageregion' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'pageconfigurationsetcontainer' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'publishset' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'publishsetcontainer' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'reference' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'role' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'datadefinition' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'datadefinitioncontainer' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'format' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'format_XSLT' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'format_SCRIPT' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'site' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'sitedestinationcontainer' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'symlink' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'target' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'template' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'transport' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'transport_fs' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'transport_ftp' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'transport_db' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'transportcontainer' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'user' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'workflow' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'workflowdefinition' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'workflowdefinitioncontainer' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'entityTypeString' },
		 'all-level':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'none' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'read' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'write' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'all-level' },
		 'acl-entry-level':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'read' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'write' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'acl-entry-level' },
		 'acl-entry-type':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'user' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'group' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'acl-entry-type' },
		 'role-types':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'site' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'global' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'role-types' },
		 'user-auth-types':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'normal' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'ldap' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'custom' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'user-auth-types' },
		 recycleBinExpiration:
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': '1' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': '15' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': '30' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'never' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'recycleBinExpiration' },
		 'asset-factory-workflow-mode':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'folder-controlled' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'factory-controlled' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'none' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'asset-factory-workflow-mode' },
		 contentTypePageConfigurationPublishMode:
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'all-destinations' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'selected-destinations' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'do-not-publish' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'contentTypePageConfigurationPublishMode' },
		 inlineEditableFieldType:
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'wired-metadata' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'dynamic-metadata' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'data-definition' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'xhtml' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'inlineEditableFieldType' },
		 'metadata-field-visibility':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'inline' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'hidden' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'visible' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'metadata-field-visibility' },
		 'dynamic-metadata-field-type':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'text' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'radio' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'dropdown' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'checkbox' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'multiselect' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'dynamic-metadata-field-type' },
		 dayOfWeek:
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'Monday' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'Tuesday' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'Wednesday' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'Thursday' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'Friday' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'Saturday' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'Sunday' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'dayOfWeek' },
		 'serialization-type':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'HTML' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'XML' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'PDF' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'RTF' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'WML' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'serialization-type' },
		 workflowNamingBehavior:
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'auto-name' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'name-of-definition' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'empty' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'workflowNamingBehavior' },
		 'index-block-sort-method':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'folder-order' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'alphabetical' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'last-modified-date' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'created-date' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'index-block-sort-method' },
		 'index-block-type':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'folder' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'content-type' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'index-block-type' },
		 'index-block-sort-order':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'ascending' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'descending' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'index-block-sort-order' },
		 'index-block-page-xml':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'no-render' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'render' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'render-current-page-only' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'index-block-page-xml' },
		 'index-block-rendering-behavior':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'render-normally' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'hierarchy' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'hierarchy-with-siblings' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'hierarchy-siblings-forward' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'index-block-rendering-behavior' },
		 'twitter-query-type':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'user-only' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'users-and-mentions' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'search-terms' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'twitter-query-type' },
		 'structured-data-type':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'text' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'asset' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'group' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'structured-data-type' },
		 'structured-data-asset-type':
			{ nsName: 'simpleType',
				namespace: null,
				name: 'simpleType',
				children:
				 [ { nsName: 'restriction',
						 namespace: null,
						 name: 'restriction',
						 children:
							[ { nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'block' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'file' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'page' },
								{ nsName: 'enumeration',
									namespace: null,
									name: 'enumeration',
									children: [],
									xmlns: {},
									'$value': 'symlink' } ],
						 xmlns: {},
						 '$base': 'xsd:string' } ],
				xmlns: {},
				'$name': 'structured-data-asset-type' } },
	elements:
	 { read:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'authentication',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'identifier',
											 '$type': 'impl:identifier' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'read',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 readResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'readReturn',
											 '$type': 'impl:readResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 'delete':
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'authentication',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'identifier',
											 '$type': 'impl:identifier' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'delete',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 deleteResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'deleteReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'deleteResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 create:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'authentication',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'asset',
											 '$type': 'impl:asset' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'create',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 createResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'createReturn',
											 '$type': 'impl:createResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'createResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 edit:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'authentication',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'asset',
											 '$type': 'impl:asset' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'edit',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 move:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'identifier',
											 '$nillable': 'false',
											 '$type': 'impl:identifier' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'moveParameters',
											 '$nillable': 'false',
											 '$type': 'impl:moveParameters' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '0',
											 '$name': 'workflowConfiguration',
											 '$nillable': 'false',
											 '$type': 'impl:workflow-configuration' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'move',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 moveResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'moveReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'moveResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 editResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'editReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'editResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 publish:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'publishInformation',
											 '$type': 'impl:publishInformation' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'publish',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 publishResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'publishReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'publishResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 batch:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': 'unbounded',
											 '$name': 'operation',
											 '$type': 'impl:operation' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'batch',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 batchResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': 'unbounded',
											 '$name': 'batchReturn',
											 '$type': 'impl:batchResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'batchResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 search:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'authentication',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'searchInformation',
											 '$type': 'impl:searchInformation' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'search',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 searchResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'searchReturn',
											 '$type': 'impl:searchResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'searchResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 readAccessRights:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'authentication',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'identifier',
											 '$type': 'impl:identifier' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readAccessRights',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 readAccessRightsResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'readAccessRightsReturn',
											 '$type': 'impl:readAccessRightsResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readAccessRightsResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 editAccessRights:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'accessRightsInformation',
											 '$nillable': 'false',
											 '$type': 'impl:accessRightsInformation' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '0',
											 '$name': 'applyToChildren',
											 '$nillable': 'false',
											 '$type': 'xsd:boolean' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'editAccessRights',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 editAccessRightsResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'editAccessRightsReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'editAccessRightsResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 readWorkflowSettings:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'authentication',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'identifier',
											 '$type': 'impl:identifier' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readWorkflowSettings',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 readWorkflowSettingsResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'readWorkflowSettingsReturn',
											 '$type': 'impl:readWorkflowSettingsResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readWorkflowSettingsResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 editWorkflowSettings:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'workflowSettings',
											 '$nillable': 'false',
											 '$type': 'impl:workflowSettings' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '0',
											 '$name': 'applyInheritWorkflowsToChildren',
											 '$nillable': 'false',
											 '$type': 'xsd:boolean' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '0',
											 '$name': 'applyRequireWorkflowToChildren',
											 '$nillable': 'false',
											 '$type': 'xsd:boolean' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'editWorkflowSettings',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 editWorkflowSettingsResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'editWorkflowSettingsReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'editWorkflowSettingsResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 listSubscribers:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'authentication',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'identifier',
											 '$type': 'impl:identifier' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'listSubscribers',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 listSubscribersResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'listSubscribersReturn',
											 '$type': 'impl:listSubscribersResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'listSubscribersResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 listMessages:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'listMessages',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 listMessagesResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'listMessagesReturn',
											 '$type': 'impl:listMessagesResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'listMessagesResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 markMessage:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'identifier',
											 '$nillable': 'false',
											 '$type': 'impl:identifier' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'markType',
											 '$nillable': 'false',
											 '$type': 'impl:message-mark-type' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'markMessage',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 markMessageResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'markMessageReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'markMessageResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 deleteMessage:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'identifier',
											 '$nillable': 'false',
											 '$type': 'impl:identifier' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'deleteMessage',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 deleteMessageResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'deleteMessageReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'deleteMessageResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 sendMessage:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'message',
											 '$nillable': 'false',
											 '$type': 'impl:message' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'sendMessage',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 sendMessageResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'sendMessageReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'sendMessageResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 checkOut:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'identifier',
											 '$nillable': 'false',
											 '$type': 'impl:identifier' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'checkOut',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 checkOutResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'checkOutReturn',
											 '$type': 'impl:checkOutResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'checkOutResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 checkIn:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'identifier',
											 '$nillable': 'false',
											 '$type': 'impl:identifier' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'comments',
											 '$nillable': 'false',
											 '$type': 'xsd:string' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'checkIn',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 checkInResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'checkInReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'checkInResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 copy:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'identifier',
											 '$nillable': 'false',
											 '$type': 'impl:identifier' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'copyParameters',
											 '$nillable': 'false',
											 '$type': 'impl:copyParameters' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '0',
											 '$name': 'workflowConfiguration',
											 '$nillable': 'false',
											 '$type': 'impl:workflow-configuration' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'copy',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 copyResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'copyReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'copyResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 siteCopy:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '0',
											 '$name': 'originalSiteId',
											 '$type': 'xsd:string' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '0',
											 '$name': 'originalSiteName',
											 '$type': 'xsd:string' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'newSiteName',
											 '$nillable': 'false',
											 '$type': 'xsd:string' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'siteCopy',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 siteCopyResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'siteCopyReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'siteCopyResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 listSites:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'listSites',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 listSitesResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'listSitesReturn',
											 '$type': 'impl:listSitesResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'listSitesResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 readAudits:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'auditParameters',
											 '$nillable': 'false',
											 '$type': 'impl:auditParameters' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readAudits',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 readAuditsResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'readAuditsReturn',
											 '$type': 'impl:readAuditsResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readAuditsResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 readWorkflowInformation:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'identifier',
											 '$nillable': 'false',
											 '$type': 'impl:identifier' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readWorkflowInformation',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 readWorkflowInformationResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'readWorkflowInformationReturn',
											 '$type': 'impl:readWorkflowInformationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'readWorkflowInformationResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 performWorkflowTransition:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'authentication',
											 '$nillable': 'false',
											 '$type': 'impl:authentication' },
										 { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$maxOccurs': '1',
											 '$minOccurs': '1',
											 '$name': 'workflowTransitionInformation',
											 '$nillable': 'false',
											 '$type': 'impl:workflowTransitionInformation' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'performWorkflowTransition',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' },
		 performWorkflowTransitionResponse:
			{ nsName: 'element',
				namespace: null,
				name: 'element',
				children:
				 [ { nsName: 'complexType',
						 namespace: null,
						 name: 'complexType',
						 children:
							[ { nsName: 'sequence',
									namespace: null,
									name: 'sequence',
									children:
									 [ { nsName: 'element',
											 namespace: null,
											 name: 'element',
											 children: [],
											 xmlns: {},
											 '$name': 'performWorkflowTransitionReturn',
											 '$type': 'impl:operationResult' } ],
									xmlns: {} } ],
						 xmlns: {} } ],
				xmlns: {},
				'$name': 'performWorkflowTransitionResponse',
				targetNSAlias: 'impl',
				targetNamespace: 'http://www.hannonhill.com/ws/ns/AssetOperationService' } },
	includes: []
	},
	name,
	util = require('util');

	/*,
	methodName = 'read',
	*/

// console.log(util.inspect(schema, {depth: 0}));

// console.log(util.inspect(schema.elements[methodName], {depth: null}));

String.prototype.endsWith = function (suffix) {
    return this.indexOf(suffix, this.length - suffix.length) !== -1;
};

function splitType(name) {
	var nameParts;
	nameParts = name.split(':');
	return {
		type: nameParts[0],
		name: nameParts[1]
	};
}

function elementNode(element) {
	var me = element.name,
		enumeration = [],
		which;
//	console.log('->', element.type, element.name);

	if (element.type === 'impl') {
		
		if (schemas.complexTypes[element.name]) {
//			console.log(util.inspect(schemas.complexTypes[element.name], {depth: null}));
			if (schemas.complexTypes[element.name].nsName === 'complexType') {
				if (schemas.complexTypes[element.name].children[0].nsName === 'sequence') {
					me = {};
					schemas.complexTypes[element.name].children[0].children.forEach(function(child) {
//						console.log(util.inspect(child, {depth: null}));
						if (child.nsName === 'choice') {
//							me[element.name] = {};
							child.children.forEach(function(grandchild) {
//								console.log(util.inspect(grandchild, {depth: null}));
								which = splitType(grandchild.$type);
								if (which.name !== 'structured-data-node') {
									me[which.name] = elementNode(which);
								} else {
									me[which.name] = 'structured-data-node';
								}
							});
						} else if (child.nsName === 'element') {
							which = splitType(child.$type);
							if (which.type === 'impl') {
								if (which.name !== 'structured-data-node') {
									me[child.$name] = elementNode(which);
								} else {
									me[child.$name] = 'structured-data-node';
								}
							} else {
								me[child.$name] = child.$type;
							}
						} else {
							me = 'ERROR';
						}
					});
				} else if (schemas.complexTypes[element.name].children[0].nsName === 'complexContent') {
					if (schemas.complexTypes[element.name].children[0].children[0].nsName === 'extension') {
						me = {};
						if (schemas.complexTypes[element.name].children[0].children[0].children.length === 0) { // extension with base
							which = splitType(schemas.complexTypes[element.name].children[0].children[0].$base);
							me = elementNode(which);
						} else { // extension with base and sequence
							which = splitType(schemas.complexTypes[element.name].children[0].children[0].$base);
							me = elementNode(which);							
							if (schemas.complexTypes[element.name].children[0].children[0].children[0].nsName === 'sequence') {
								schemas.complexTypes[element.name].children[0].children[0].children[0].children.forEach(function(child) {
									if (child.nsName === 'choice') {
										child.children.forEach(function(grandchild) {
											which = splitType(grandchild.$type);
											me[child.$name] = elementNode(which);
										});
									} else {
										which = splitType(child.$type);
										if (which.type === 'impl') {
											if (which.name !== 'structured-data-node') {
												me[child.$name] = elementNode(which);
											} else {
												me[child.$name] = 'structured-data-node';
											}
										} else {
											me[child.$name] = child.$type;
										}
									}
								
								});
							} else {
								me = 'ERROR';
							}
						}						
					} else {
						me = 'ERROR';
					}
				} else if (schemas.complexTypes[element.name].children[0].nsName === 'choice') {
					me = {};
					schemas.complexTypes[element.name].children[0].children.forEach(function (child) {
//						console.log(util.inspect(child, {depth: null}));
						which = splitType(child.$type);
						if (which.type === 'impl') {
							if (which.name !== 'structured-data-node') {
								me[child.$name] = elementNode(which);
							} else {
								me[child.$name] = 'structured-data-node';
							}
						} else {
							me[child.$name] = child.$type;
						}
					});
				} else {
					me = 'ERROR'
				}
			} else {
				me = 'ERROR'
			}
		}
		if (schemas.types[element.name]) {
//			console.log(util.inspect(schemas.types[element.name], {depth: null}));
			if (schemas.types[element.name].nsName === 'simpleType') {
				if (schemas.types[element.name].children[0].nsName === 'restriction') {
					schemas.types[element.name].children[0].children.forEach(function(child) {
						enumeration.push(child.$value);
					});
					me = '';
//					me = enumeration.join(', ');
				}
			} else {
				me = 'ERROR';
			}
		}
	} else if (element.type === 'xsd') {
		me = 'ERROR';
	} else {
		me = 'ERROR';
	}
	return me;
}

function base(name) {
	var me = {},
		typeList = [],
		which,
		pug;

	//starting with the method.$name and going to elements rather than using method.children drill down, for ease of parsing

//	console.log(util.inspect(schemas.elements[name], {depth: null}));

//	console.log(schemas.elements[name].nsName, schemas.elements[name].name);
//	console.log(schemas.elements[name].children.length, schemas.elements[name].children[0].nsName);
//	console.log(schemas.elements[name].children[0].children.length, schemas.elements[name].children[0].children[0].nsName);
	schemas.elements[name].children[0].children[0].children.forEach(function (child) {
//		typeList.push(child.$minOccurs + ' ' + child.$maxOccurs + ' ' + child.$type + ' ' + child.$nillable);
		which = splitType(child.$type);
		if (which.type === 'impl') {
			me[which.name] = elementNode(which);
		} else if (which.type === 'xsd') {
			me[child.$name] = ''; //child.$minOccurs + ' ' + child.$maxOccurs;
		} else {
			me[which.name] = which.type;
		}
//		console.log(util.inspect(child, {depth: null}));
	});
//	console.log(schemas.elements[name].children[0].children[0].children.length, typeList.join(', '));

	return me;
}

for (name in schemas.elements) {
	if (schemas.elements.hasOwnProperty(name) && !name.endsWith('Response')) { //  && name === 'create'
		console.log('### ' + name + ' ###');
//		trace(name);
//		console.log(util.inspect(rootElement(name), {depth: null}));
//		console.log(util.inspect(build('elements', name), {depth: null}));
		console.log(util.inspect(base(name), {depth: null}));
	}
}

//	console.log(util.inspect(schemas, {depth: null}));

/*
console.log('');
console.log(util.inspect(schema.complexTypes, {depth: 0}));
console.log('');
console.log(util.inspect(schema.types, {depth: 0}));
*/



